---
import { getCollection, type CollectionEntry } from 'astro:content';
import Layout from '../../layouts/Layout.astro';
import ArticleShare from '../../components/ArticleShare.astro';
import ResponsiveTags from '../../components/ResponsiveTags.jsx';

export async function getStaticPaths() {
  const articles = await getCollection('articles');
  
  return articles.map((article) => ({
    params: { slug: article.slug },
    props: { article },
  }));
}

interface Props {
  article: CollectionEntry<'articles'>;
}

const { article } = Astro.props;
const { Content } = await article.render();

// Construct the full URL for sharing
const baseUrl = Astro.site?.toString() || 'https://gustavduplessis.com';
const articleUrl = `${baseUrl}/articles/${article.slug}`;
---

<Layout 
  title={`${article.data.title} | Articles | Gustav du Plessis`} 
  description={article.data.description}
  image={article.data.image}
>
  <main class="min-h-screen px-4 pb-20">
    <div class="max-w-4xl mx-auto">
      <!-- Integrated breadcrumb header -->
      <div class="flex items-center gap-4 mb-4 mt-4 sm:mt-12">
        <div class="flex items-baseline gap-2 text-sm min-w-0 pr-4">
          <a href="/articles" class="text-gray-600 dark:text-gray-400 hover:text-primary transition-colors uppercase tracking-wider font-medium flex-shrink-0">Articles</a>
          <svg class="w-4 h-5  text-gray-400 dark:text-gray-500 flex-shrink-0 translate-y-1.5" fill="currentColor" viewBox="0 0 20 20">
            <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd" />
          </svg>
          <span class="text-text-light dark:text-text-dark font-medium truncate text-sm">{article.data.title}</span>
        </div>
        <div class="flex-1 h-[1px] bg-gray-200 dark:bg-gray-800"></div>
      </div>
    <!-- Article Header -->
    <div class="mb-8 pb-8 border-b border-gray-200 dark:border-gray-700">
      <div class="flex-1 min-w-0">
        <h1 class="text-2xl sm:text-3xl font-bold text-text-light dark:text-text-dark mb-3">
          {article.data.title}
        </h1>
        
        {article.data.description && (
          <p class="text-base sm:text-lg text-gray-600 dark:text-gray-400 mb-4">
            {article.data.description}
          </p>
        )}
      </div>
      
      <div class="space-y-3 text-sm">
        <!-- Date and Share Icons - First Line -->
        {article.data.date && (
          <div class="flex items-center justify-between gap-2 min-w-0">
            <div class="flex items-center gap-2 min-w-0 flex-shrink">
              <svg class="w-4 h-4 text-gray-500 flex-shrink-0" fill="currentColor" viewBox="0 0 20 20">
                <path fill-rule="evenodd" d="M6 2a1 1 0 00-1 1v1H4a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V6a2 2 0 00-2-2h-1V3a1 1 0 10-2 0v1H7V3a1 1 0 00-1-1zm0 5a1 1 0 000 2h8a1 1 0 100-2H6z" clip-rule="evenodd" />
              </svg>
              <span class="text-gray-600 dark:text-gray-400 truncate">{article.data.date}</span>
            </div>
            
            <!-- Share Icons aligned to the right -->
            <div class="flex items-center gap-1 flex-shrink-0">
              <!-- Copy Link Button -->
              <button
                id="copyLinkBtnHeader"
                class="p-1.5 text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200 hover:bg-gray-100 dark:hover:bg-gray-800 rounded transition-colors"
                title="Copy link to article"
              >
                <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z" />
                </svg>
              </button>

              <!-- Twitter Share -->
              <a
                href={`https://twitter.com/intent/tweet?text=${encodeURIComponent(article.data.title)}&url=${encodeURIComponent(articleUrl)}`}
                target="_blank"
                rel="noopener noreferrer"
                class="inline-flex items-center justify-center p-1.5 text-gray-500 hover:text-[#1DA1F2] dark:text-gray-400 dark:hover:text-[#1DA1F2] hover:bg-gray-100 dark:hover:bg-gray-800 rounded transition-colors"
                title="Share on Twitter"
              >
                <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 24 24">
                  <path d="M23.953 4.57a10 10 0 01-2.825.775 4.958 4.958 0 002.163-2.723c-.951.555-2.005.959-3.127 1.184a4.92 4.92 0 00-8.384 4.482C7.69 8.095 4.067 6.13 1.64 3.162a4.822 4.822 0 00-.666 2.475c0 1.71.87 3.213 2.188 4.096a4.904 4.904 0 01-2.228-.616v.06a4.923 4.923 0 003.946 4.827 4.996 4.996 0 01-2.212.085 4.936 4.936 0 004.604 3.417 9.867 9.867 0 01-6.102 2.105c-.39 0-.779-.023-1.17-.067a13.995 13.995 0 007.557 2.209c9.053 0 13.998-7.496 13.998-13.985 0-.21 0-.42-.015-.63A9.935 9.935 0 0024 4.59z"/>
                </svg>
              </a>

              <!-- LinkedIn Share -->
              <a
                href={`https://www.linkedin.com/sharing/share-offsite/?url=${encodeURIComponent(articleUrl)}`}
                target="_blank"
                rel="noopener noreferrer"
                class="inline-flex items-center justify-center p-1.5 text-gray-500 hover:text-[#0077B5] dark:text-gray-400 dark:hover:text-[#0077B5] hover:bg-gray-100 dark:hover:bg-gray-800 rounded transition-colors"
                title="Share on LinkedIn"
              >
                <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 24 24">
                  <path d="M20.447 20.452h-3.554v-5.569c0-1.328-.027-3.037-1.852-3.037-1.853 0-2.136 1.445-2.136 2.939v5.667H9.351V9h3.414v1.561h.046c.477-.9 1.637-1.85 3.37-1.85 3.601 0 4.267 2.37 4.267 5.455v6.286zM5.337 7.433c-1.144 0-2.063-.926-2.063-2.065 0-1.138.92-2.063 2.063-2.063 1.14 0 2.064.925 2.064 2.063 0 1.139-.925 2.065-2.064 2.065zm1.782 13.019H3.555V9h3.564v11.452zM22.225 0H1.771C.792 0 0 .774 0 1.729v20.542C0 23.227.792 24 1.771 24h20.451C23.2 24 24 23.227 24 22.271V1.729C24 .774 23.2 0 22.222 0h.003z"/>
                </svg>
              </a>
            </div>
          </div>
        )}
        
        <!-- Tags - Second Line -->
        {article.data.tags && article.data.tags.length > 0 && (
          <div class="flex items-center gap-2">
            <svg class="w-4 h-4 text-gray-500" fill="currentColor" viewBox="0 0 20 20">
              <path fill-rule="evenodd" d="M17.707 9.293a1 1 0 010 1.414l-7 7a1 1 0 01-1.414 0l-7-7A.997.997 0 012 10V5a3 3 0 013-3h5c.256 0 .512.098.707.293l7 7zM5 6a1 1 0 100-2 1 1 0 000 2z" clip-rule="evenodd" />
            </svg>
            <ResponsiveTags 
              tags={article.data.tags} 
              tagType="secondary" 
              maxRowsMobile={1}
              maxRowsDesktop={1}
              client:load
            />
          </div>
        )}
        
        <!-- Font Size Controls - Third Line -->
        <div class="flex items-center gap-2">
          <div class="w-4 h-4 flex items-center justify-center">
            <span class="text-gray-500 text-xs font-medium">A</span>
          </div>
          <div class="relative">
            <button 
              id="fontSizeToggle"
              class="text-sm text-gray-600 dark:text-gray-400 hover:text-gray-700 dark:hover:text-gray-200 transition-colors"
              title="Change font size"
            >
              Change font size
            </button>
            
            <!-- Font Size Popup -->
            <div 
              id="fontSizePopup"
              class="absolute left-0 top-full mt-2 bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-lg shadow-lg p-2 hidden z-50"
            >
              <div class="flex items-center gap-1">
                <button 
                  id="fontSizeSmall" 
                  class="p-1.5 text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200 hover:bg-gray-100 dark:hover:bg-gray-800 rounded transition-colors"
                  title="Small font"
                >
                  <span class="text-xs font-medium">A</span>
                </button>
                <button 
                  id="fontSizeNormal" 
                  class="p-1.5 text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200 hover:bg-gray-100 dark:hover:bg-gray-800 rounded transition-colors"
                  title="Normal font"
                >
                  <span class="text-sm font-medium">A</span>
                </button>
                <button 
                  id="fontSizeLarge" 
                  class="p-1.5 text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200 hover:bg-gray-100 dark:hover:bg-gray-800 rounded transition-colors"
                  title="Large font"
                >
                  <span class="text-base font-medium">A</span>
                </button>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>

    <article id="articleContent" class="prose prose-gray dark:prose-invert max-w-none mt-8">
      <Content />
    </article>
    
    <!-- Article Share Component -->
    <ArticleShare 
      title={article.data.title}
      description={article.data.description}
      url={articleUrl}
    />
    
      <!-- Back to Articles Button -->
      <div class="mt-8">
        <a 
          href="/articles" 
          class="inline-flex items-center gap-2 px-4 py-2 bg-primary/10 hover:bg-primary/20 text-primary rounded-lg transition-colors duration-200 border border-primary/20 hover:border-primary/30"
        >
          <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20">
            <path fill-rule="evenodd" d="M9.707 16.707a1 1 0 01-1.414 0l-6-6a1 1 0 010-1.414l6-6a1 1 0 011.414 1.414L5.414 9H17a1 1 0 110 2H5.414l4.293 4.293a1 1 0 010 1.414z" clip-rule="evenodd" />
          </svg>
          Back to Articles
        </a>
      </div>
    </div>
  </main>
</Layout>

<script>
  // Copy link functionality for header button
  document.addEventListener('DOMContentLoaded', function() {
    const copyBtnHeader = document.getElementById('copyLinkBtnHeader');
    
    copyBtnHeader?.addEventListener('click', async function() {
      try {
        await navigator.clipboard.writeText(window.location.href);
        
        // Brief visual feedback
        const originalClass = copyBtnHeader.className;
        copyBtnHeader.classList.add('text-secondary', 'bg-secondary/10');
        
        setTimeout(() => {
          copyBtnHeader.className = originalClass;
        }, 1000);
      } catch (err) {
        console.error('Failed to copy link:', err);
        
        // Fallback for older browsers
        const textArea = document.createElement('textarea');
        textArea.value = window.location.href;
        document.body.appendChild(textArea);
        textArea.select();
        document.execCommand('copy');
        document.body.removeChild(textArea);
      }
    });

    // Font size functionality
    const articleContent = document.getElementById('articleContent');
    const fontSizeToggle = document.getElementById('fontSizeToggle');
    const fontSizePopup = document.getElementById('fontSizePopup');
    const fontSizeSmall = document.getElementById('fontSizeSmall');
    const fontSizeNormal = document.getElementById('fontSizeNormal');
    const fontSizeLarge = document.getElementById('fontSizeLarge');

    // Load saved font size preference
    const savedFontSize = localStorage.getItem('articleFontSize') || 'normal';
    setFontSize(savedFontSize);

    // Toggle popup visibility
    fontSizeToggle?.addEventListener('click', function(e) {
      e.stopPropagation();
      fontSizePopup.classList.toggle('hidden');
    });

    // Close popup when clicking outside
    document.addEventListener('click', function(e) {
      if (!fontSizeToggle.contains(e.target) && !fontSizePopup.contains(e.target)) {
        fontSizePopup.classList.add('hidden');
      }
    });

    function setFontSize(size) {
      // Remove all prose size classes
      articleContent.classList.remove('prose-sm', 'prose', 'prose-lg');
      
      // Reset all button states
      [fontSizeSmall, fontSizeNormal, fontSizeLarge].forEach(btn => {
        btn.classList.remove('text-primary', 'bg-primary/10');
        btn.classList.add('text-gray-500', 'dark:text-gray-400');
      });

      // Add appropriate class and highlight active button
      switch(size) {
        case 'small':
          articleContent.classList.add('prose-sm');
          fontSizeSmall.classList.remove('text-gray-500', 'dark:text-gray-400');
          fontSizeSmall.classList.add('text-primary', 'bg-primary/10');
          break;
        case 'large':
          articleContent.classList.add('prose-lg');
          fontSizeLarge.classList.remove('text-gray-500', 'dark:text-gray-400');
          fontSizeLarge.classList.add('text-primary', 'bg-primary/10');
          break;
        default: // normal
          articleContent.classList.add('prose');
          fontSizeNormal.classList.remove('text-gray-500', 'dark:text-gray-400');
          fontSizeNormal.classList.add('text-primary', 'bg-primary/10');
      }
      
      // Save preference
      localStorage.setItem('articleFontSize', size);
      
      // Close popup after selection
      fontSizePopup.classList.add('hidden');
    }

    // Add event listeners
    fontSizeSmall?.addEventListener('click', () => setFontSize('small'));
    fontSizeNormal?.addEventListener('click', () => setFontSize('normal'));
    fontSizeLarge?.addEventListener('click', () => setFontSize('large'));
  });
</script>
