---
import DarkModeToggle from './DarkModeToggle.astro';
import { getEntryBySlug } from 'astro:content';

export interface Props {
  currentPath: string;
}

const { currentPath } = Astro.props;

// Get bio data to check visibility settings
const bio = await getEntryBySlug('bio', 'bio');
const showArticles = bio?.data.showArticles ?? true;
const showProjects = bio?.data.showProjects ?? true;
const showExperience = bio?.data.showExperience ?? true;

// Function to check if a path is active
const isActive = (path: string) => {
  if (path === '/' && currentPath === '/') return true;
  if (path !== '/' && currentPath.startsWith(path)) return true;
  return false;
};

// Function to get current page name for mobile menu
const getCurrentPageName = (path: string) => {
  if (path === '/') return 'About';
  if (path.startsWith('/projects')) return 'Portfolio';
  if (path.startsWith('/experience')) return 'Experience';
  if (path.startsWith('/articles')) return 'Articles';
  if (path.startsWith('/lets-work-together')) return 'Let\'s Collaborate';
  return 'Navigation';
};
---

<!-- Mobile Navigation -->
<nav class="sm:hidden flex w-full justify-center px-4">
  <div class="flex items-center justify-between w-full max-w-sm px-4 py-3 rounded-2xl text-text-light dark:text-text-dark backdrop-blur-xl border border-gray-200/80 dark:border-gray-700/80 bg-bg-light/90 dark:bg-bg-dark-alt/90 shadow-xl transition-all duration-300">
    <!-- Logo/Brand -->
    <div class="font-medium text-primary">
      {getCurrentPageName(currentPath)}
    </div>
    
    <!-- Mobile Menu Toggle and Dark Mode -->
    <div class="flex items-center gap-2">
      <DarkModeToggle />
      <button 
        id="mobile-menu-toggle"
        aria-label="Toggle mobile menu"
        class="p-2 rounded-lg transition-colors hover:bg-gray-100 dark:hover:bg-gray-800 focus:outline-none focus:ring-2 focus:ring-primary/30"
      >
        <svg id="hamburger-icon" class="h-5 w-5 text-gray-700 dark:text-gray-300" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" />
        </svg>
        <svg id="close-icon" class="h-5 w-5 text-gray-700 dark:text-gray-300 hidden" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
        </svg>
      </button>
    </div>
  </div>
</nav>

<!-- Mobile Menu Overlay -->
<div id="mobile-menu" class="sm:hidden fixed inset-0 z-50 hidden">
  <!-- Backdrop -->
  <div class="fixed inset-0 bg-black/50 backdrop-blur-sm transition-opacity" id="mobile-menu-backdrop"></div>
  
  <!-- Menu Panel -->
  <div class="fixed top-0 right-0 h-full w-72 bg-bg-light dark:bg-bg-dark border-l border-gray-200/80 dark:border-gray-700/80 shadow-2xl transform translate-x-full transition-transform duration-300 ease-in-out" id="mobile-menu-panel">
    <div class="flex flex-col h-full">
      <!-- Header -->
      <div class="flex items-center justify-between p-6 border-b border-gray-200/50 dark:border-gray-700/50">
        <div class="font-semibold text-lg text-primary">{getCurrentPageName(currentPath)}</div>
        <button 
          id="mobile-menu-close"
          aria-label="Close mobile menu"
          class="p-2 rounded-lg transition-colors hover:bg-gray-100 dark:hover:bg-gray-800"
        >
          <svg class="h-5 w-5 text-gray-700 dark:text-gray-300" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
          </svg>
        </button>
      </div>
      
      <!-- Navigation Links -->
      <div class="flex-1 py-6">
        <div class="flex flex-col gap-2 px-6">
          <a class={`relative group font-medium transition-colors duration-200 py-3 px-4 rounded-lg ${isActive('/') ? 'text-primary bg-primary/10' : 'text-gray-700 dark:text-gray-300 hover:text-primary hover:bg-primary/5'}`} href="/">
            <div class="flex items-center gap-3">
              <svg class="h-5 w-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z" />
              </svg>
              <span>About</span>
            </div>
          </a>
          {showProjects && (
            <a class={`relative group font-medium transition-colors duration-200 py-3 px-4 rounded-lg ${isActive('/projects') ? 'text-primary bg-primary/10' : 'text-gray-700 dark:text-gray-300 hover:text-primary hover:bg-primary/5'}`} href="/projects">
              <div class="flex items-center gap-3">
                <svg class="h-5 w-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10" />
                </svg>
                <span>Portfolio</span>
              </div>
            </a>
          )}
          {showExperience && (
            <a class={`relative group font-medium transition-colors duration-200 py-3 px-4 rounded-lg ${isActive('/experience') ? 'text-primary bg-primary/10' : 'text-gray-700 dark:text-gray-300 hover:text-primary hover:bg-primary/5'}`} href="/experience">
              <div class="flex items-center gap-3">
                <svg class="h-5 w-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 13.255A23.931 23.931 0 0112 15c-3.183 0-6.22-.62-9-1.745M16 6V4a2 2 0 00-2-2h-4a2 2 0 00-2-2v2m8 0H8m8 0v2a2 2 0 01-2 2H10a2 2 0 01-2-2V6" />
                </svg>
                <span>Experience</span>
              </div>
            </a>
          )}
          {showArticles && (
            <a class={`relative group font-medium transition-colors duration-200 py-3 px-4 rounded-lg ${isActive('/articles') ? 'text-primary bg-primary/10' : 'text-gray-700 dark:text-gray-300 hover:text-primary hover:bg-primary/5'}`} href="/articles">
              <div class="flex items-center gap-3">
                <svg class="h-5 w-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 20H5a2 2 0 01-2-2V6a2 2 0 012-2h10a2 2 0 012 2v1m2 13a2 2 0 01-2-2V7m2 13a2 2 0 002-2V9a2 2 0 00-2-2h-2m-4-3H9M7 16h6M7 8h6v4H7V8z" />
                </svg>
                <span>Articles</span>
              </div>
            </a>
          )}
          <a class={`relative group font-medium transition-colors duration-200 py-3 px-4 rounded-lg ${isActive('/lets-work-together') ? 'text-primary bg-primary/10' : 'text-gray-700 dark:text-gray-300 hover:text-primary hover:bg-primary/5'}`} href="/lets-work-together">
            <div class="flex items-center gap-3">
              <svg class="h-5 w-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z" />
              </svg>
              <span>Let's Collaborate</span>
            </div>
          </a>
        </div>
      </div>
    </div>
  </div>
</div>

<!-- Desktop Navigation -->
<nav class="hidden sm:flex w-full justify-center px-4">
  <div class="flex items-center gap-4 md:gap-6 px-5 md:px-7 py-3 rounded-2xl text-text-light dark:text-text-dark backdrop-blur-xl border border-gray-200/80 dark:border-gray-700/80 bg-bg-light/90 dark:bg-bg-dark-alt/90 shadow-xl transition-all duration-300">
    <div class="flex items-center gap-4 md:gap-6 text-sm">
      <a class={`relative group font-medium transition-colors duration-200 px-2 ${isActive('/') ? 'text-primary' : 'text-gray-600 dark:text-gray-400 hover:text-primary'}`} href="/">About
        <span class={`absolute -bottom-0.5 left-0 h-[1.5px] bg-primary transition-all duration-300 ${isActive('/') ? 'w-full' : 'w-0 group-hover:w-full'}`}></span>
      </a>
      {showProjects && (
        <a class={`relative group font-medium transition-colors duration-200 px-2 ${isActive('/projects') ? 'text-primary' : 'text-gray-600 dark:text-gray-400 hover:text-primary'}`} href="/projects">Portfolio
          <span class={`absolute -bottom-0.5 left-0 h-[1.5px] bg-primary transition-all duration-300 ${isActive('/projects') ? 'w-full' : 'w-0 group-hover:w-full'}`}></span>
        </a>
      )}
      {showExperience && (
        <a class={`relative group font-medium transition-colors duration-200 px-2 ${isActive('/experience') ? 'text-primary' : 'text-gray-600 dark:text-gray-400 hover:text-primary'}`} href="/experience">Experience
          <span class={`absolute -bottom-0.5 left-0 h-[1.5px] bg-primary transition-all duration-300 ${isActive('/experience') ? 'w-full' : 'w-0 group-hover:w-full'}`}></span>
        </a>
      )}
      {showArticles && (
        <a class={`relative group font-medium transition-colors duration-200 px-2 ${isActive('/articles') ? 'text-primary' : 'text-gray-600 dark:text-gray-400 hover:text-primary'}`} href="/articles">Articles
          <span class={`absolute -bottom-0.5 left-0 h-[1.5px] bg-primary transition-all duration-300 ${isActive('/articles') ? 'w-full' : 'w-0 group-hover:w-full'}`}></span>
        </a>
      )}
      <a class={`relative group font-medium transition-colors duration-200 px-2 ${isActive('/lets-work-together') ? 'text-primary' : 'text-gray-600 dark:text-gray-400 hover:text-primary'}`} href="/lets-work-together">Let's Collaborate
        <span class={`absolute -bottom-0.5 left-0 h-[1.5px] bg-primary transition-all duration-300 ${isActive('/lets-work-together') ? 'w-full' : 'w-0 group-hover:w-full'}`}></span>
      </a>
    </div>
    <div class="h-4 w-[1.5px] bg-gray-300 dark:bg-gray-600 mx-3 md:mx-5 flex-shrink-0"></div>
    <DarkModeToggle />
  </div>
</nav>

<script is:inline>
  // Mobile menu functionality
  document.addEventListener('DOMContentLoaded', function() {
    const mobileMenuToggle = document.getElementById('mobile-menu-toggle');
    const mobileMenuClose = document.getElementById('mobile-menu-close');
    const mobileMenu = document.getElementById('mobile-menu');
    const mobileMenuPanel = document.getElementById('mobile-menu-panel');
    const mobileMenuBackdrop = document.getElementById('mobile-menu-backdrop');
    const hamburgerIcon = document.getElementById('hamburger-icon');
    const closeIcon = document.getElementById('close-icon');
    
    function openMobileMenu() {
      mobileMenu.classList.remove('hidden');
      document.body.style.overflow = 'hidden';
      setTimeout(() => {
        mobileMenuPanel.style.transform = 'translateX(0)';
      }, 10);
      hamburgerIcon.classList.add('hidden');
      closeIcon.classList.remove('hidden');
    }
    
    function closeMobileMenu() {
      mobileMenuPanel.style.transform = 'translateX(100%)';
      document.body.style.overflow = '';
      setTimeout(() => {
        mobileMenu.classList.add('hidden');
      }, 300);
      hamburgerIcon.classList.remove('hidden');
      closeIcon.classList.add('hidden');
    }
    
    // Event listeners
    mobileMenuToggle?.addEventListener('click', function() {
      if (mobileMenu.classList.contains('hidden')) {
        openMobileMenu();
      } else {
        closeMobileMenu();
      }
    });
    
    mobileMenuClose?.addEventListener('click', closeMobileMenu);
    mobileMenuBackdrop?.addEventListener('click', closeMobileMenu);
    
    // Close menu when clicking navigation links
    const mobileNavLinks = mobileMenu?.querySelectorAll('a');
    mobileNavLinks?.forEach(link => {
      link.addEventListener('click', closeMobileMenu);
    });
    
    // Close menu on escape key
    document.addEventListener('keydown', function(e) {
      if (e.key === 'Escape' && !mobileMenu.classList.contains('hidden')) {
        closeMobileMenu();
      }
    });
  });
</script>
