---
import { getCollection } from 'astro:content';
import { getEntryBySlug } from 'astro:content';
import ProjectTags from './ProjectTags.jsx';

const projects = await getCollection('projects');
const sortedProjects = projects.sort((a, b) => (a.data.order || 999) - (b.data.order || 999));

// Get bio data for portfolio card configuration
const bio = await getEntryBySlug('bio', 'bio');
const portfolioCard = bio?.data.portfolioCard || {};

// Count featured projects
const featuredProjects = sortedProjects.filter(project => project.data.featured);
const featuredCount = featuredProjects.length;

// Extract all unique tags and count occurrences
const tagCounts = {};
sortedProjects.forEach(project => {
  project.data.tags?.forEach(tag => {
    tagCounts[tag] = (tagCounts[tag] || 0) + 1;
  });
});

// Sort tags alphabetically and create tab structure
const sortedTags = Object.keys(tagCounts).sort();
const allCount = sortedProjects.length;
---

<script>
  // Use a more reliable approach for DOM manipulation
  document.addEventListener('DOMContentLoaded', function() {
    let selectedTag = 'All';
    
    function handleTagChange(tag) {
      selectedTag = tag;
      
      // Update active tab styling - target all buttons with tag-tab class
      const allTabs = document.querySelectorAll('.tag-tab');
      allTabs.forEach(tab => {
        if (tab.getAttribute('data-tag') === tag) {
          // Active state
          tab.classList.remove('bg-gray-100', 'dark:bg-gray-800', 'text-gray-700', 'dark:text-gray-300');
          tab.classList.add('bg-primary', 'text-white');
        } else {
          // Inactive state
          tab.classList.remove('bg-primary', 'text-white');
          tab.classList.add('bg-gray-100', 'dark:bg-gray-800', 'text-gray-700', 'dark:text-gray-300');
        }
      });
      
      // Filter projects
      const allCards = document.querySelectorAll('.project-card');
      allCards.forEach(card => {
        const cardTags = card.dataset.tags ? card.dataset.tags.split(',') : [];
        const isFeatured = card.dataset.featured === 'true';
        let shouldShow = false;
        
        if (selectedTag === 'All') {
          shouldShow = true;
        } else if (selectedTag === 'Featured') {
          shouldShow = isFeatured;
        } else {
          shouldShow = cardTags.includes(selectedTag);
        }
        
        card.style.display = shouldShow ? '' : 'none';
      });
    }
    
    // Attach event listeners to all tag buttons
    const tagButtons = document.querySelectorAll('.tag-tab');
    tagButtons.forEach(button => {
      button.addEventListener('click', function() {
        const tag = this.getAttribute('data-tag');
        handleTagChange(tag);
      });
    });
    
    // Set initial active tab
    handleTagChange('All');
  });
</script>

<section class="mt-4">
  <!-- Portfolio Description -->
  <div class="mb-6 sm:mb-8 text-center px-4">
    <p class="text-base sm:text-lg font-medium text-gray-700 dark:text-gray-300 leading-relaxed max-w-2xl mx-auto mb-2">
      Projects and Products that Brought Ideas to Life
    </p>
    <p class="text-sm sm:text-base font-medium text-gray-600 dark:text-gray-400 max-w-2xl mx-auto">
      Through leadership, collaboration, and execution.
    </p>
  </div>
  
  <div class="flex items-center gap-2 sm:gap-4 mb-4 sm:mb-6 px-4">
    <div class="flex items-center gap-2">
      <h2 class="text-xs sm:text-sm font-medium tracking-wider uppercase text-gray-600 dark:text-gray-400">Filter by Category</h2>
    </div>
    <div class="flex-1 h-[1px] bg-gray-200 dark:bg-gray-800"></div>
  </div>
  
  <!-- Tag Filter Tabs -->
  <div class="mb-4 sm:mb-6">
    <!-- Mobile: Horizontal scroll with padding -->
    <div class="flex overflow-x-auto gap-2 pb-2 px-4 sm:hidden scrollbar-hide">
      <!-- All tab always first -->
      <button 
        class="tag-tab px-2.5 py-1.5 rounded-full text-xs font-medium transition-colors bg-gray-100 dark:bg-gray-800 text-gray-700 dark:text-gray-300 hover:bg-primary hover:text-white whitespace-nowrap flex-shrink-0"
        data-tag="All"
      >
        All ({allCount})
      </button>
      
      <!-- Featured tab -->
      <button 
        class="tag-tab px-2.5 py-1.5 rounded-full text-xs font-medium transition-colors bg-gray-100 dark:bg-gray-800 text-gray-700 dark:text-gray-300 hover:bg-primary hover:text-white whitespace-nowrap flex-shrink-0"
        data-tag="Featured"
      >
        Featured ({featuredCount})
      </button>
      
      <!-- Other tags sorted alphabetically -->
      {sortedTags.map(tag => (
        <button 
          class="tag-tab px-2.5 py-1.5 rounded-full text-xs font-medium transition-colors bg-gray-100 dark:bg-gray-800 text-gray-700 dark:text-gray-300 hover:bg-primary hover:text-white whitespace-nowrap flex-shrink-0"
          data-tag={tag}
        >
          {tag} ({tagCounts[tag]})
        </button>
      ))}
    </div>
    
    {/* Scroll hint text - below mobile pills, right aligned */}
    <div class="flex justify-end px-4 mt-1 sm:hidden">
      <span class="text-xs text-gray-500 dark:text-gray-400 italic">Swipe for more categories â†’</span>
    </div>
    
    <!-- Desktop: Flex wrap -->
    <div class="hidden sm:flex flex-wrap gap-2">
      <!-- All tab always first -->
      <button 
        class="tag-tab px-2.5 py-1 rounded-full text-xs font-medium transition-colors bg-gray-100 dark:bg-gray-800 text-gray-700 dark:text-gray-300 hover:bg-primary hover:text-white"
        data-tag="All"
      >
        All ({allCount})
      </button>
      
      <!-- Featured tab -->
      <button 
        class="tag-tab px-2.5 py-1 rounded-full text-xs font-medium transition-colors bg-gray-100 dark:bg-gray-800 text-gray-700 dark:text-gray-300 hover:bg-primary hover:text-white"
        data-tag="Featured"
      >
        Featured ({featuredCount})
      </button>
      
      <!-- Other tags sorted alphabetically -->
      {sortedTags.map(tag => (
        <button 
          class="tag-tab px-2.5 py-1 rounded-full text-xs font-medium transition-colors bg-gray-100 dark:bg-gray-800 text-gray-700 dark:text-gray-300 hover:bg-primary hover:text-white"
          data-tag={tag}
        >
          {tag} ({tagCounts[tag]})
        </button>
      ))}
    </div>
  </div>
  
  <!-- Projects Grid -->
  <ul class="space-y-3 sm:space-y-4 px-4">
    {sortedProjects.map(project => (
      <li 
        key={project.id} 
        class="project-card group transition-all duration-200"
        data-tags={project.data.tags?.join(',') || ''}
        data-featured={project.data.featured ? 'true' : 'false'}
      >
        <a 
          href={`/projects/${project.slug}`}
          class="block py-4 px-4 sm:py-5 sm:px-6 rounded-xl bg-gray-50 dark:bg-gray-900/30 border border-gray-200 dark:border-gray-800 transition-all duration-200 hover:bg-gray-100 dark:hover:bg-gray-900/50 hover:border-primary/30 hover:shadow-md"
        >
          <div class="flex items-start justify-between mb-2 gap-3">
            <h3 class="font-medium text-sm sm:text-base text-gray-900 dark:text-gray-100 group-hover-accent transition-colors duration-200 leading-snug">{project.data.title}</h3>
            <div class="flex items-center gap-2 flex-shrink-0">
              <span class="text-xs text-gray-500 dark:text-gray-400 whitespace-nowrap">{project.data.date}</span>
              <svg class="w-4 h-4 text-gray-400 group-hover-accent transition-colors duration-200 flex-shrink-0" fill="currentColor" viewBox="0 0 20 20">
                <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd" />
              </svg>
            </div>
          </div>
          <p class="text-xs sm:text-sm text-gray-700 dark:text-gray-300 mb-3 leading-relaxed">{project.data.summary}</p>
          
          <!-- Responsive Tags and Tech -->
          <ProjectTags 
            tags={project.data.tags} 
            tech={project.data.tech}
            client:load
          />
        </a>
      </li>
    ))}
    
    <!-- Coming Soon Card - Conditionally Rendered -->
    {portfolioCard.show && (
      <li class="coming-soon-card group transition-all duration-200">
        <div class="block py-4 px-4 sm:py-5 sm:px-6 rounded-xl bg-gradient-to-br from-blue-50 to-indigo-50 dark:from-blue-900/20 dark:to-indigo-900/20 border border-blue-200 dark:border-blue-800 transition-all duration-200">
          <div class="flex items-start justify-between mb-2 gap-3">
            <div class="flex items-center gap-2">
              <svg class="w-5 h-5 text-blue-600 dark:text-blue-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6" />
              </svg>
              <h3 class="font-medium text-sm sm:text-base text-blue-900 dark:text-blue-100 leading-snug">
                {portfolioCard.title || "Portfolio Expanding Soon"}
              </h3>
            </div>
            <div class="flex items-center gap-2 flex-shrink-0">
              <span class="text-xs text-blue-600 dark:text-blue-400 whitespace-nowrap font-medium">
                {portfolioCard.status || "Loading Content"}
              </span>
              <svg class="w-4 h-4 text-blue-500 dark:text-blue-400 flex-shrink-0" fill="currentColor" viewBox="0 0 20 20">
                <path fill-rule="evenodd" d="M4 2a1 1 0 011 1v2.101a7.002 7.002 0 0111.601 2.566 1 1 0 11-1.885.666A5.002 5.002 0 005.999 7H9a1 1 0 010 2H4a1 1 0 01-1-1V3a1 1 0 011-1zm.008 9.057a1 1 0 011.276.61A5.002 5.002 0 0014.001 13H11a1 1 0 110-2h5a1 1 0 011 1v5a1 1 0 11-2 0v-2.101a7.002 7.002 0 01-11.601-2.566 1 1 0 01.61-1.276z" clip-rule="evenodd" />
              </svg>
            </div>
          </div>
          <p class="text-xs sm:text-sm text-blue-800 dark:text-blue-200 mb-3 leading-relaxed">
            {portfolioCard.description || "This is a new section! I'm currently adding detailed case studies from my past projects and will continue updating with new work."}
          </p>
          
          <!-- Tags-style indicators -->
          {portfolioCard.tags && portfolioCard.tags.length > 0 && (
            <div class="flex flex-wrap gap-1.5">
              {portfolioCard.tags.map(tag => (
                <span class="inline-flex items-center px-2 py-1 rounded-md text-xs font-medium bg-blue-100 dark:bg-blue-900/30 text-blue-800 dark:text-blue-200">
                  {tag}
                </span>
              ))}
            </div>
          )}
        </div>
      </li>
    )}
  </ul>
</section>
