---
import { getCollection } from 'astro:content';
const productExperiences = await getCollection('experienceProduct');
const technologyExperiences = await getCollection('experienceTechnology');
---

<script is:inline client:load>
  let selectedRole = 'Product';
  function handleRoleChange(e) {
    selectedRole = e.target.value;
    document.querySelectorAll('.exp-card').forEach(card => {
      card.style.display = card.dataset.role === selectedRole ? '' : 'none';
    });
  }
  if (typeof window !== 'undefined') {
    window.addEventListener('DOMContentLoaded', () => {
      handleRoleChange({ target: { value: selectedRole } });
    });
  }
</script>

<section class="mt-12">
  <div class="flex items-center gap-4 mb-6">
    <h2 class="text-sm font-medium tracking-wider uppercase text-zinc-600 dark:text-zinc-400">Experience</h2>
    <select class="bg-zinc-100 dark:bg-zinc-800 border border-zinc-200 dark:border-zinc-700 rounded px-3 py-1 text-zinc-900 dark:text-zinc-100 ml-4 transition-all duration-200 hover:bg-zinc-200 dark:hover:bg-zinc-700 focus:outline-none focus:ring-2 focus:ring-zinc-400 dark:focus:ring-zinc-500" onchange="handleRoleChange(event)">
      <option value="Product">Product</option>
      <option value="Technology">Technology</option>
    </select>
    <div class="flex-1 h-[1px] bg-zinc-200 dark:bg-zinc-800"></div>
  </div>
  <ul class="space-y-4">
    {productExperiences.sort((a, b) => (b.data.timeframe > a.data.timeframe ? 1 : -1)).map(exp => (
      <li class="exp-card py-5 px-6 rounded-xl bg-zinc-50 dark:bg-zinc-900/30 border border-zinc-200 dark:border-zinc-800 transition-all duration-200 hover:bg-zinc-100 dark:hover:bg-zinc-900/50" key={exp.id} data-role="Product">
        <div class="flex items-center justify-between mb-1 flex-wrap gap-2">
          <span class="font-medium text-base text-zinc-900 dark:text-zinc-100">{exp.data.title} <span class="text-zinc-600 dark:text-zinc-400 font-normal">@ {exp.data.company}</span></span>
          <span class="text-xs text-zinc-500 dark:text-zinc-400">{exp.data.timeframe}</span>
        </div>
        <div class="text-xs text-zinc-600 dark:text-zinc-400 mb-2">{exp.data.location}</div>
        <ul class="list-disc list-inside text-sm text-zinc-700 dark:text-zinc-300 space-y-1">
          {exp.data.responsibilities?.map(item => (
            <li>{item}</li>
          ))}
        </ul>
      </li>
    ))}
    {technologyExperiences.sort((a, b) => (b.data.timeframe > a.data.timeframe ? 1 : -1)).map(exp => (
      <li class="exp-card py-5 px-6 rounded-xl bg-zinc-50 dark:bg-zinc-900/30 border border-zinc-200 dark:border-zinc-800 transition-all duration-200 hover:bg-zinc-100 dark:hover:bg-zinc-900/50" key={exp.id} data-role="Technology">
        <div class="flex items-center justify-between mb-1 flex-wrap gap-2">
          <span class="font-medium text-base text-zinc-900 dark:text-zinc-100">{exp.data.title} <span class="text-zinc-600 dark:text-zinc-400 font-normal">@ {exp.data.company}</span></span>
          <span class="text-xs text-zinc-500 dark:text-zinc-400">{exp.data.timeframe}</span>
        </div>
        <div class="text-xs text-zinc-600 dark:text-zinc-400 mb-2">{exp.data.location}</div>
        <ul class="list-disc list-inside text-sm text-zinc-700 dark:text-zinc-300 space-y-1">
          {exp.data.responsibilities?.map(item => (
            <li>{item}</li>
          ))}
        </ul>
      </li>
    ))}
  </ul>
</section>
