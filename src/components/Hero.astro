---
import { getEntryBySlug, getCollection } from 'astro:content';
import EducationSection from './EducationSection.astro';

const bio = await getEntryBySlug('bio', 'bio');
const { Content: BioContent } = await bio?.render() || { Content: null };

// Get featured projects
const allProjects = await getCollection('projects');
const featuredProjects = allProjects
  .filter(project => project.data.featured)
  .sort((a, b) => (a.data.order || 999) - (b.data.order || 999));

// Get featured articles from articles collection
let featuredArticles = [];
try {
  const allArticles = await getCollection('articles');
  featuredArticles = allArticles
    .filter(article => article.data.featured === true)
    .sort((a, b) => {
      // Sort by date if available, newest first
      if (a.data.date && b.data.date) {
        return new Date(b.data.date).getTime() - new Date(a.data.date).getTime();
      }
      return 0;
    });
} catch (error) {
  console.error('Error loading articles collection:', error);
}

// Get current roles
const currentRoles = await getCollection('currentRoles');
const sortedCurrentRoles = currentRoles
  .filter(role => role.data.visible !== false)
  .sort((a, b) => (a.data.order || 999) - (b.data.order || 999));
---

<div class="max-w-4xl mx-auto mt-8">
  <!-- Main Hero Section -->
  <div class="flex flex-col sm:flex-row sm:items-end gap-8 sm:gap-4 mb-6 sm:mb-12">
    <!-- Profile Image -->
    <div class="relative w-36 h-36 mx-auto sm:mx-0 rounded-full overflow-hidden flex-shrink-0 border border-gray-200 dark:border-gray-700">
      <img 
        src="/Profile.jpg" 
        alt="Gustav du Plessis" 
        class="w-full h-full object-cover"
        onerror="this.src='/profile-placeholder.svg'"
      />  
    </div>
    
    <!-- Hero Content -->
    <div class="flex-1 px-2 sm:px-0 text-center sm:text-left">
      <h1 class="text-base md:text-lg lg:text-xl font-normal text-text-light dark:text-text-dark leading-relaxed mb-4 sm:mb-6">
        <div class="mb-2 sm:mb-4">
          Hi, I'm Gustav. I create scalable, user-centered products through thoughtful design, creative problem-solving, and strong collaboration.
        </div>
        <!-- Desktop: Show experience/contact inline -->
        <div class="hidden sm:block text-gray-600 dark:text-gray-400">
          12+ Years Experience 路 Remote-first Mindset 路 
          {bio?.data.email && (
            <a href={`mailto:${bio.data.email}`} class="group inline-flex items-center text-accent hover:text-accent-600 transition-colors">
              <span class="font-medium border-b border-accent/30 hover:border-accent transition-colors">Say hello</span>
              <span class="ml-1 opacity-0 group-hover:opacity-100 group-hover:translate-x-1 transition-all duration-300">
                <svg stroke="currentColor" fill="none" stroke-width="2" viewBox="0 0 24 24" stroke-linecap="round" stroke-linejoin="round" class="w-4 h-4" xmlns="http://www.w3.org/2000/svg">
                  <line x1="5" y1="12" x2="19" y2="12"></line>
                  <polyline points="12 5 19 12 12 19"></polyline>
                </svg>
              </span>
            </a>
          )}
        </div>
      </h1>
    </div>
  </div>

  <!-- Mobile: Show experience/contact below content -->
  <div class="sm:hidden text-center text-gray-600 dark:text-gray-400 mb-8 px-2">
    12+ Years Experience 路 Remote-first Mindset 路 
    {bio?.data.email && (
      <a href={`mailto:${bio.data.email}`} class="group inline-flex items-center text-accent hover:text-accent-600 transition-colors">
        <span class="font-medium border-b border-accent/30 hover:border-accent transition-colors">Say hello</span>
        <span class="ml-1 opacity-0 group-hover:opacity-100 group-hover:translate-x-1 transition-all duration-300">
          <svg stroke="currentColor" fill="none" stroke-width="2" viewBox="0 0 24 24" stroke-linecap="round" stroke-linejoin="round" class="w-4 h-4" xmlns="http://www.w3.org/2000/svg">
            <line x1="5" y1="12" x2="19" y2="12"></line>
            <polyline points="12 5 19 12 12 19"></polyline>
          </svg>
        </span>
      </a>
    )}
  </div>

  <!-- Work Section -->
  <section class="mb-16">
    <div class="flex items-center justify-between mb-6">
      <h2 class="text-lg font-medium text-text-light dark:text-text-dark tracking-wide uppercase">Ongoing Roles</h2>
      <a href="/experience" class="text-sm text-gray-600 dark:text-gray-400 hover-accent transition-colors flex items-center gap-1 group">
        <span>Full Work History</span>
        <svg stroke="currentColor" fill="none" stroke-width="2" viewBox="0 0 24 24" stroke-linecap="round" stroke-linejoin="round" class="w-3 h-3 opacity-0 group-hover:opacity-100 group-hover:translate-x-1 transition-all duration-300" xmlns="http://www.w3.org/2000/svg">
          <line x1="5" y1="12" x2="19" y2="12"></line>
          <polyline points="12 5 19 12 12 19"></polyline>
        </svg>
      </a>
    </div>
    <div class="space-y-3">
      {sortedCurrentRoles.map(role => (
        <div class="flex justify-between items-start py-2 pl-3 border-l-2 border-primary/20">
          <div>
            <h3 class="font-medium text-text-light dark:text-text-dark">{role.data.title}</h3>
            <p class="text-secondary text-sm font-medium">{role.data.roleType}</p>
          </div>
          <div class="text-right">
            <p class="text-gray-600 dark:text-gray-400 text-sm">{role.data.timeframe}</p>
            <p class="text-gray-500 dark:text-gray-500 text-sm">{role.data.company}</p>
          </div>
        </div>
      ))}
    </div>
  </section>

  <!-- What I Do Section -->
  <section class="mb-16">
    <h2 class="text-lg font-medium text-text-light dark:text-text-dark mb-6 tracking-wide uppercase">About</h2>
    <div class="prose prose-gray dark:prose-invert max-w-none">
      {BioContent && <BioContent />}
    </div>
  </section>

  <!-- Education Section -->
  <EducationSection />

  <!-- Featured Projects Section -->
  <section class="mb-16">
    <div class="flex items-center justify-between mb-6">
      <h2 class="text-lg font-medium text-text-light dark:text-text-dark tracking-wide uppercase">Featured Projects</h2>
      <a href="/projects" class="text-sm text-gray-600 dark:text-gray-400 hover-accent transition-colors flex items-center gap-1 group">
        <span>View Portfolio</span>
        <svg stroke="currentColor" fill="none" stroke-width="2" viewBox="0 0 24 24" stroke-linecap="round" stroke-linejoin="round" class="w-3 h-3 opacity-0 group-hover:opacity-100 group-hover:translate-x-1 transition-all duration-300" xmlns="http://www.w3.org/2000/svg">
          <line x1="5" y1="12" x2="19" y2="12"></line>
          <polyline points="12 5 19 12 12 19"></polyline>
        </svg>
      </a>
    </div>
    <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
      {featuredProjects.map(project => (
        <a href={`/projects/${project.slug}`} class="group block p-4 rounded-lg border border-gray-200 dark:border-gray-700 hover:border-primary/30 dark:hover:border-primary/30 transition-all duration-200 hover:shadow-sm">
          <h3 class="font-medium text-text-light dark:text-text-dark group-hover-accent transition-colors">{project.data.title}</h3>
          <p class="text-sm text-gray-600 dark:text-gray-400 mt-1">{project.data.summary}</p>
          {project.data.tags && project.data.tags.length > 0 && (
            <div class="flex flex-wrap gap-1 mt-2">
              {project.data.tags.slice(0, 2).map(tag => (
                <span class="inline-block bg-primary/10 text-primary text-xs px-2 py-1 rounded">
                  {tag}
                </span>
              ))}
              {project.data.tags.length > 2 && project.data.tags[2] && (
                <span class="inline-block bg-secondary/10 text-secondary text-xs px-2 py-1 rounded">
                  {project.data.tags[2]}
                </span>
              )}
              {project.data.tags.length > 3 && (
                <span class="text-xs text-gray-500 dark:text-gray-400">+{project.data.tags.length - 3} more</span>
              )}
            </div>
          )}
        </a>
      ))}
    </div>
  </section>

  <!-- Featured Articles Section -->
  {featuredArticles.length > 0 && (
    <section class="mb-16">
      <div class="flex items-center justify-between mb-6">
        <h2 class="text-lg font-medium text-text-light dark:text-text-dark tracking-wide uppercase">Featured Articles</h2>
        <a href="/articles" class="text-sm text-gray-600 dark:text-gray-400 hover-accent transition-colors flex items-center gap-1 group">
          <span>Read Articles</span>
          <svg stroke="currentColor" fill="none" stroke-width="2" viewBox="0 0 24 24" stroke-linecap="round" stroke-linejoin="round" class="w-3 h-3 opacity-0 group-hover:opacity-100 group-hover:translate-x-1 transition-all duration-300" xmlns="http://www.w3.org/2000/svg">
            <line x1="5" y1="12" x2="19" y2="12"></line>
            <polyline points="12 5 19 12 12 19"></polyline>
          </svg>
        </a>
      </div>
      <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
        {featuredArticles.map(article => (
          <a href={`/articles/${article.slug}`} class="group block p-4 rounded-lg border border-gray-200 dark:border-gray-700 hover:border-primary/30 dark:hover:border-primary/30 transition-all duration-200 hover:shadow-sm">
            <h3 class="font-medium text-text-light dark:text-text-dark group-hover-accent transition-colors">{article.data.title}</h3>
            {article.data.description && (
              <p class="text-sm text-gray-600 dark:text-gray-400 mt-1">{article.data.description}</p>
            )}
            {article.data.tags && article.data.tags.length > 0 && (
              <div class="flex flex-wrap gap-1 mt-2">
                {article.data.tags.slice(0, 2).map(tag => (
                  <span class="inline-block bg-primary/10 text-primary text-xs px-2 py-1 rounded">
                    {tag}
                  </span>
                ))}
                {article.data.tags.length > 2 && article.data.tags[2] && (
                  <span class="inline-block bg-secondary/10 text-secondary text-xs px-2 py-1 rounded">
                    {article.data.tags[2]}
                  </span>
                )}
                {article.data.tags.length > 3 && (
                  <span class="text-xs text-gray-500 dark:text-gray-400">+{article.data.tags.length - 3} more</span>
                )}
              </div>
            )}
          </a>
        ))}
      </div>
    </section>
  )}
</div>
